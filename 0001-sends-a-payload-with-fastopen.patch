From 610e2ebd8335b8e415ab2e9940dd9cf60b943d66 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Fran=C3=A7ois=20Rigault?= <rigault.francois@gmail.com>
Date: Sun, 12 May 2024 04:09:48 +0200
Subject: [PATCH] send payload with fastopen

---
 traceroute/mod-tcp.c | 36 ++++++++++++++++++++++++++++--------
 1 file changed, 28 insertions(+), 8 deletions(-)

diff --git a/traceroute/mod-tcp.c b/traceroute/mod-tcp.c
index c8453bf..2410598 100644
--- a/traceroute/mod-tcp.c
+++ b/traceroute/mod-tcp.c
@@ -93,8 +93,7 @@ static char *print_tcp_info (struct tcphdr *tcp, size_t len) {
 	unsigned int flags;
 	uint8_t *ptr;
 
-	if (len < sizeof (struct tcphdr) ||
-	    len != tcp->doff << 2
+	if (len < sizeof (struct tcphdr)
 	)  return NULL;
 
 
@@ -437,18 +436,39 @@ static int tcp_init (const sockaddr_any *dest,
 	}
 
 
-	csum_len = ptr - buf;
-
-	if (csum_len > sizeof (buf))
-		error ("impossible");	/*  paranoia   */
 
 	len = ptr - (uint8_t *) th;
 	if (len & 0x03)  error ("impossible");	/*  as >>2 ...  */
 
-	*lenp = htons (len);
 	th->doff = len >> 2;
 
 
+	if (fastopen) {
+		*ptr ++ = 'G'; // first letter of a get...
+		*ptr ++ = 'E'; // first letter of a get...
+		*ptr ++ = 'T'; // first letter of a get...
+		*ptr ++ = ' '; // first letter of a get...
+		*ptr ++ = '/'; // first letter of a get...
+		*ptr ++ = ' '; // first letter of a get...
+		*ptr ++ = 'H'; // first letter of a get...
+		*ptr ++ = 'T'; // first letter of a get...
+		*ptr ++ = 'T'; // first letter of a get...
+		*ptr ++ = 'P'; // first letter of a get...
+		*ptr ++ = '/'; // first letter of a get...
+		*ptr ++ = '1'; // first letter of a get...
+		*ptr ++ = '.'; // first letter of a get...
+		*ptr ++ = '0'; // first letter of a get...
+		*ptr ++ = '\r'; // first letter of a get...
+		*ptr ++ = '\n'; // first letter of a get...
+		*ptr ++ = '\r'; // first letter of a get...
+		*ptr ++ = '\n'; // first letter of a get...
+		len += 18;
+	}
+	*lenp = htons (len);
+	csum_len = ptr - buf;
+
+	if (csum_len > sizeof (buf))
+		error ("impossible");	/*  paranoia   */
 	*packet_len_p = len;
 
 	return 0;
@@ -507,7 +527,7 @@ static void tcp_send_probe (probe *pb, int ttl) {
 
 	pb->send_time = get_time ();
 
-	if (do_send (raw_sk, th, th->doff << 2, &dest_addr) < 0) {
+	if (do_send (raw_sk, th, (fastopen? 18:0)+(th->doff << 2), &dest_addr) < 0) {
 	    close (sk);
 	    pb->send_time = 0;
 	    return;
-- 
2.43.0

